@inherits JssComponentBase
@inject IComponentFactory ComponentFactory

<Styleguide_Specimen Component="@Component" E2eId="styleguide-layout-reuse">
    <div class="row">
        @*
            This placeholder is using _templated parameters_ to enable customizing the markup for each component within.
            In this case, it's placing each component in its own column of a flexbox layout - giving an n-up columnar layout.
            The component itself does not need to know it's living in a columnar layout.

            There are three templated parameters available:
            RenderEach - called once for each content component
                Sitecore Experience Editor markup is automatically rendered in between content components when present
            RenderEmpty - called when the placeholder contains no content components. Can be used to wrap the Sitecore EE empty placeholder
                markup in something that's visually correct, like here where we need to wrap it in a column div to make it selectable.
            Render - called once and passed _all_ components in the placeholder. Allows custom iteration. EE code markup must be accounted for.

            Generally speaking stick to RenderEach and RenderEmpty unless doing something really custom.
        *@
        <Placeholder Rendering="@Component"
                     Name="jss-reuse-example">
            <RenderEach>
                <div class="col-sm">
                    @context.ComponentFactory.RenderComponent(context.Component)
                </div>
            </RenderEach>
            <RenderEmpty>
                <div className="col-sm">
                    @foreach (var component in context.Components)
                    {
                        @context.ComponentFactory.RenderComponent(component)
                    }
                </div>
            </RenderEmpty>
        </Placeholder>
    </div>
</Styleguide_Specimen>
