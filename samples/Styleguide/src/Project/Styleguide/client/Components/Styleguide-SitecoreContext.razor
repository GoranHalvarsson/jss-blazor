@inherits JssComponentBase
@using Microsoft.Extensions.Logging
@using ErrorEventArgs = Newtonsoft.Json.Serialization.ErrorEventArgs
@inject ILogger<Styleguide_SitecoreContext> Logger

@*
    Demonstrates gaining access to the route-level Sitecore Context from
    within other components.
*@
<Styleguide_Specimen Component="@Component"
                     E2eId="styleguide-sitecore-context">
    <p>The current Sitecore Context is...</p>
    <pre style="max-height: 400px; overflow: scroll">@RenderSitecoreContext()</pre>
</Styleguide_Specimen>

@code {
    [CascadingParameter]
    public RenderingData SitecoreContext { get; set; }

    private string RenderSitecoreContext()
    {
        return JsonConvert.SerializeObject(SitecoreContext, new JsonSerializerSettings
        {
            Error = HandleSerializationError,
            Formatting = Formatting.Indented
        });
    }

    // Serialization of the RenderingData fails due to unknown reasons. This function logs
    // serialization errors to the console and allows serialization to continue.
    private void HandleSerializationError(object sender, ErrorEventArgs args)
    {
        Logger.LogWarning(args.ErrorContext.Error, LogUtility.FormatLogMessage(this, args.ErrorContext.Error.Message));
        args.ErrorContext.Handled = true;
    }
}
