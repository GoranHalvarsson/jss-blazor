@inherits ComponentBase

@RenderLink()

@code {
    [Parameter]
    public Field Field { get; set; }

    [Parameter]
    public bool Editable { get; set; } = true;

    [Parameter]
    public bool ShowLinkTextWithChildrenPresent { get; set; } = false;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> HtmlAttributes { get; set; } = new Dictionary<string, object>();

    private RenderFragment RenderLink() => builder =>
    {
        if (!(Field is LinkField linkField)
            || string.IsNullOrWhiteSpace(linkField.EditableFirstPart) && linkField.Value == null)
        {
            return;
        }

        // Experience Editor Rendering
        if (Editable && !string.IsNullOrWhiteSpace(linkField.EditableFirstPart))
        {
            builder.OpenElement(0, "span");
            builder.AddAttribute(1, "class", "sc-link-wrapper");
            builder.AddMultipleAttributes(1, HtmlAttributes);
            builder.AddMarkupContent(2, linkField.EditableFirstPart);
            ChildContent?.Invoke(builder);
            builder.AddMarkupContent(2, linkField.EditableLastPart);
            builder.CloseElement();
            return;
        }

        var anchorAttrs = new Dictionary<string, object>
        {
            { "href", linkField.Value.Href },
            { "class", linkField.Value.Class },
            { "title", linkField.Value.Title },
            { "target", linkField.Value.Target }
        };

        if ("_blank".Equals(anchorAttrs["target"]?.ToString(), StringComparison.InvariantCultureIgnoreCase) && !HtmlAttributes.ContainsKey("rel"))
        {
            // information disclosure attack prevention keeps target blank site from getting ref to window.opener
            anchorAttrs["rel"] = "noopener noreferrer";
        }

        string linkText = null;
        if (ShowLinkTextWithChildrenPresent || ChildContent == null)
        {
            var text = linkField.Value.Text;
            linkText = !string.IsNullOrWhiteSpace(text) ? text : linkField.Value.Href;
        }

        builder.OpenElement(0, "a");
        builder.AddMultipleAttributes(1, anchorAttrs);
        builder.AddMultipleAttributes(1, HtmlAttributes);
        if (!string.IsNullOrWhiteSpace(linkText))
        {
            builder.AddContent(2, linkText);
        }
        ChildContent?.Invoke(builder);
        builder.CloseElement();
    };
}
