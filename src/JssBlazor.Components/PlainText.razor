@inherits ComponentBase

@RenderText()

@code {
    [Parameter]
    public Field Field { get; set; }

    [Parameter]
    public string Tag { get; set; }

    [Parameter]
    public bool Editable { get; set; } = true;

    [Parameter]
    public bool Encode { get; set; } = true;

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> HtmlAttributes { get; set; }

    private RenderFragment RenderText() => builder =>
    {
        if (Field == null || (string.IsNullOrWhiteSpace(Field.Editable) && Field.Value == null))
        {
            return;
        }

        if (!Encode)
        {
            Editable = false;
        }

        var output = (!string.IsNullOrWhiteSpace(Field.Editable) && Editable) ? Field.Editable : Field.Value.Rendered;
        var renderMarkup = (!string.IsNullOrEmpty(Field.Editable) && Editable) || !Encode;

        if (!string.IsNullOrWhiteSpace(Tag) || renderMarkup)
        {
            var tag = !string.IsNullOrWhiteSpace(Tag) ? Tag : "span";
            builder.OpenElement(0, tag);
            builder.AddMultipleAttributes(1, HtmlAttributes);

            if (renderMarkup)
            {
                builder.AddMarkupContent(2, output);
            }
            else
            {
                builder.AddContent(2, output);
            }

            builder.CloseElement();
            return;
        }

        builder.AddContent(0, output);
    };
}
