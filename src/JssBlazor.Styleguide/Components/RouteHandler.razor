@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject ILayoutService LayoutService

@code {
    @* https://github.com/JamesNK/Newtonsoft.Json/issues/2020#issuecomment-518351156 *@
    private System.ComponentModel.ReferenceConverter ReferenceConverter = new System.ComponentModel.ReferenceConverter(typeof(Layout));
}

@if (Route == null)
{
    <p><em>Waiting on Layout Service...</em></p>
    return;
}

<CascadingValue Value="@Route.Sitecore">
    <Layout Route="@Route" />
</CascadingValue>

@code {
    [Parameter]
    public LayoutServiceResult Route { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var routePath = NavigationManager.GetSitecoreRoutePath();
        Route = await LayoutService.GetRouteDataAsync(routePath, null);
    }
}
